from binance.client import Client
from binance.enums import *
import pandas as pd
import time

# Configuração da API
API_KEY = 'sua_api_key'
API_SECRET = 'sua_secret_key'

client = Client(API_KEY, API_SECRET)

# Par de negociação e intervalo
SYMBOL = 'TAOUSDT'
INTERVAL = '5m'

# Função para obter dados históricos
def get_historical_data(symbol, interval):
    candles = client.get_klines(symbol=symbol, interval=interval)
    df = pd.DataFrame(candles, columns=['open_time', 'open', 'high', 'low', 'close', 'volume', 
                                        'close_time', 'quote_asset_volume', 'number_of_trades', 
                                        'taker_buy_base_asset_volume', 'taker_buy_quote_asset_volume', 'ignore'])
    df['open'] = df['open'].astype(float)
    df['high'] = df['high'].astype(float)
    df['low'] = df['low'].astype(float)
    df['close'] = df['close'].astype(float)
    df['volume'] = df['volume'].astype(float)
    return df

# Função para identificar padrões de candlestick
def identify_patterns(df):
    # Exemplo: Três Soldados Brancos
    if (df['close'].iloc[-3] > df['open'].iloc[-3] and
        df['close'].iloc[-2] > df['open'].iloc[-2] and
        df['close'].iloc[-1] > df['open'].iloc[-1] and
        df['close'].iloc[-2] > df['close'].iloc[-3] and
        df['close'].iloc[-1] > df['close'].iloc[-2]):
        return 'Three White Soldiers'
    return None

# Função para executar ordens
def execute_order(symbol, side, quantity):
    try:
        order = client.create_order(
            symbol=symbol,
            side=side,
            type=ORDER_TYPE_MARKET,
            quantity=quantity
        )
        print(f"Order executada: {order}")
    except Exception as e:
        print(f"Erro ao executar ordem: {e}")

# Estratégia principal
def strategy():
    balance = client.get_asset_balance(asset='USDT')
    usdt_balance = float(balance['free'])

    if usdt_balance < 10:
        print("Saldo insuficiente para operar.")
        return

    while True:
        try:
            df = get_historical_data(SYMBOL, INTERVAL)
            pattern = identify_patterns(df)

            if pattern == 'Three White Soldiers':
                quantity = usdt_balance / df['close'].iloc[-1]
                execute_order(SYMBOL, SIDE_BUY, round(quantity, 3))

            time.sleep(300)  # Espera 5 minutos para o próximo ciclo
        except Exception as e:
            print(f"Erro na estratégia: {e}")

if __name__ == "__main__":
    strategy()
